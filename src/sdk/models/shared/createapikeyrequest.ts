/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The API key can have full access to Resend’s API or be only restricted to send emails. * full_access - Can create, delete, get, and update any resource. * sending_access - Can only send emails.
 */
export enum Permission {
    FullAccess = "full_access",
    SendingAccess = "sending_access",
}

export class CreateApiKeyRequest extends SpeakeasyBase {
    /**
     * Restrict an API key to send emails only from a specific domain. Only used when the permission is sending_acces.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "domain_id" })
    domainId?: string;

    /**
     * The API key name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * The API key can have full access to Resend’s API or be only restricted to send emails. * full_access - Can create, delete, get, and update any resource. * sending_access - Can only send emails.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "permission" })
    permission?: Permission;
}
